{"version":3,"file":"static/js/42.d98f66ae.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"MovieDetailsPage_movie__ge9gn\",\"movieMain\":\"MovieDetailsPage_movieMain__pE5oS\",\"poster\":\"MovieDetailsPage_poster__rJd-l\",\"movieDesc\":\"MovieDetailsPage_movieDesc__sWvik\",\"movieTitle\":\"MovieDetailsPage_movieTitle__BrqIu\",\"movieOverview\":\"MovieDetailsPage_movieOverview__f+OXn\",\"production\":\"MovieDetailsPage_production__pij5n\",\"additional\":\"MovieDetailsPage_additional__Fty3l\",\"information\":\"MovieDetailsPage_information__e5SPI\",\"informationLink\":\"MovieDetailsPage_informationLink__Ld1Vo\",\"activeInformationLink\":\"MovieDetailsPage_activeInformationLink__2Vp9R\"};","import { Component, lazy, Suspense } from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport { TailSpin } from 'react-loader-spinner';\nimport styles from './MovieDetailsPage.module.css';\nimport defaultMovie from \"../../static/defaultMovie.jpg\";\nimport defaultCompany from \"../../static/defaultCompany.jfif\";\n\nimport axios from 'axios';\nimport propTypes from 'prop-types';\n\nconst Cast = lazy(() => import(\"components/Cast/Cast\"));\nconst Reviews = lazy(() => import(\"components/Reviews/Reviews\"));\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '170b9b9397b0574b7d603cba918ea1f4';\n\nexport default class MovieDetailsPage extends Component {\n  state = {\n    loading: true,\n    info: {}\n  };\n\n  componentDidMount() {\n    const movieId = this.props.match.params.movieId;\n\n    setTimeout(() => {\n      axios\n        .get(`movie/${movieId}?api_key=${API_KEY}`)\n        .then(response => this.setState({ info: response.data }))\n        .catch(error => console.error(error))\n        .finally(() => this.setState({ loading: false, }))\n    }, 500);\n  }\n\n  goBack = () => {\n    const { location, history } = this.props;\n    history.push(location?.state?.from);\n  }\n\n  render() {\n    let { title, id, poster_path, overview, backdrop_path, release_date, tagline, homepage, vote_average, genres, production_companies } = this.state.info;\n\n    if (!title) {\n      return null;\n    }\n\n    if (!poster_path) {\n      poster_path = defaultMovie;\n    } else {\n      poster_path = `https://image.tmdb.org/t/p/original${poster_path}`;\n    }\n\n    if (!backdrop_path) {\n      backdrop_path = defaultCompany;\n    } else {\n      backdrop_path = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n    }\n\n    release_date = new Date(release_date);\n\n    return (\n      <>\n        <div className={styles.movie} style={{\n          backgroundImage: `url(${backdrop_path})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: \"rgba(0, 0, 0, 0.80)\",\n          backgroundBlendMode: \"darken\",\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n        }\n        }>\n          <div className={styles.movieMain}>\n            <button type='button' onClick={this.goBack}>&#8592; Go back</button>\n            <img src={poster_path} alt={title} className={styles.poster} />\n          </div>\n\n          <div className={styles.movieDesc}>\n            <h2 className={styles.movieTitle}>{title} ({release_date.getFullYear()})</h2>\n            <p className={styles.movieOverview}><b>Description:</b> {overview}</p>\n            <h3><b>Rating:</b> {vote_average}</h3>\n            <h3><b>Tagline:</b> \"<i>{tagline}</i>\"</h3>\n            <h3><b>Homepage:</b> <a href={homepage}>{homepage}</a></h3>\n            <h3><b>Genres:</b> </h3>\n            <ul>\n              {genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n            <h3><b>Production companies:</b></h3>\n            <div className={styles.production}>\n              <ul>\n                {production_companies.map(({ id, logo_path, name, origin_country }) => {\n                  if (!logo_path) {\n                    logo_path = defaultCompany;\n                  } else {\n                    logo_path = `https://image.tmdb.org/t/p/original${logo_path}`;\n                  }\n\n                  return (\n                    <li key={id}>\n                      <img src={logo_path} alt={name} />\n                      <h5><b>{name}</b> {origin_country ? `(${origin_country})` : \"\"}</h5>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n        </div >\n        <div className={styles.additional}>\n          <h2>Additional information:</h2>\n          <div className={styles.information}>\n\n            <NavLink to={{ pathname: `/movies/${id}/cast`, state: { from: this.props.location } }} className={styles.informationLink} activeClassName={styles.activeInformationLink}>Cast</NavLink>\n            <NavLink to={{ pathname: `/movies/${id}/reviews`, state: { from: this.props.location } }} className={styles.informationLink} activeClassName={styles.activeInformationLink}>Reviews</NavLink>\n          </div>\n\n        </div>\n\n        <Suspense fallback={<TailSpin\n          heigth=\"100\"\n          width=\"100\"\n          color=\"#ce0b0b\"\n          ariaLabel=\"loading\"\n          wrapperClass=\"loader\"\n        />}>\n          <Route path=\"/movies/:movieId/cast\" component={Cast} />\n          <Route path=\"/movies/:movieId/reviews\" component={Reviews} />\n        </Suspense>\n      </>\n    );\n  }\n}\n\nMovieDetailsPage.propTypes = {\n  match: propTypes.object.isRequired,\n  location: propTypes.object.isRequired,\n  history: propTypes.object.isRequired,\n}"],"names":["Cast","lazy","Reviews","axios","MovieDetailsPage","state","loading","info","goBack","props","location","history","push","from","movieId","this","match","params","setTimeout","then","response","setState","data","catch","error","console","finally","title","id","poster_path","overview","backdrop_path","release_date","tagline","homepage","vote_average","genres","production_companies","defaultMovie","defaultCompany","Date","className","styles","style","backgroundImage","backgroundRepeat","backgroundColor","backgroundBlendMode","backgroundPosition","backgroundSize","type","onClick","src","alt","getFullYear","href","map","name","logo_path","origin_country","to","pathname","activeClassName","Suspense","fallback","heigth","width","color","ariaLabel","wrapperClass","path","component","Component"],"sourceRoot":""}